---
anchors:
  smarsh_releases_bucket: &smarsh_releases_bucket
    bucket: smarsh-bosh-releases
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))

  blobstore_credentials: &blobstore_credentials
    AWS_ACCESS_KEY_ID: ((aws-access-key-id))
    AWS_SECRET_ACCESS_KEY: ((aws-secret-access-key))
  bosh-creds: &bosh-creds
    jumpbox_key: |
      ((jumpbox-key.private_key))
    ca_cert: |
      ((ca-cert.certificate))
    
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource

resources:
# - name: git-bosh-release
#   type: git
#   source:
#     uri: https://github.com/Smarsh/cf-kafka-boshrelease.git
#     branch: SAAS-281 

- name: bosh-cli2
  type: registry-image
  source:
    repository: acuzoka/bosh-cli2
    username: ((docker.username))
    password: ((docker.password))
    tag: latest

- name: s3-dev-release
  type: s3
  source:
    << : *smarsh_releases_bucket
    regexp: sredataservices/dev-releases/kafka-(.*)-release.tgz

- name: pull-request
  type: pull-request
  check_every: 5m
  source:
    repository: smarsh/cf-kafka-boshrelease
    access_token: ((github-access-token))
    base_branch: master

jobs:
  - name: pull-request
    serial: true
    plan:
      - get: pull-request
        version: every
        trigger: true
      - put: pull-request
        params:
          path: pull-request
          status: pending
      - get: bosh-cli2
      - task: create-dev-release
        file: pull-request/ci/tasks/create-dev-release.yml 
        image: bosh-cli2
        on_failure:
          put: pull-request
          params:
            path: pull-request
            status: failure
      - put: pull-request
        params:
          path: pull-request
          status: success
      - put: s3-dev-release
        params:
          file: create-dev-release/kafka-*-release.tgz
      
      
  # - name: publish-final-release
  #   serial: true
  #   plan:
  #     - get: git-bosh-release
  #       trigger: true
  #       passed:
  #         - create-dev-release
  #     - get: s3-dev-release
  #     - get: bosh-cli2
  #     - task: create-release
  #       file: git-bosh-release/ci/tasks/create-release.yml
  #       image: bosh-cli2
